import e from"clipper-lib";function n(e,n){if(void 0===n&&(n="upper"),e.length%2!=0)return[];for(var t=[],r=0;r<e.length;r+=2){var o=void 0;o="upper"===n?{X:e[r],Y:e[r+1]}:{x:e[r],y:e[r+1]},t.push(o)}return t}function t(t,r){void 0===r&&(r=10);var o=n(t),p=new e.ClipperOffset,i=new e.Paths;p.AddPaths([o],e.JoinType.jtMiter,e.EndType.etClosedPolygon),p.Execute(i,r);var u=i[0].reduce((function(e,n){return e.concat([n.X,n.Y])}),[]);return u.push(u[0],u[1]),u}function r(e){return n(e)}function o(n,t){var o=new e.Path;r(n).forEach((function(e){o.push(e)}));var p=new e.Path;r(t).forEach((function(e){p.push(e)}));var i=new e.Path,u=new e.Clipper;try{u.AddPath(o,e.PolyType.ptSubject,!0),u.AddPath(p,e.PolyType.ptClip,!0),u.Execute(e.ClipType.ctIntersection,i)}catch(e){console.log(e)}return!!i.length&&!function(n,t){for(var r=!0,o=!0,p=0,i=n;p<i.length;p++){var u=i[p];if(1!==e.Clipper.PointInPolygon(u,t)){r=!1;break}}for(var a=0,c=t;a<c.length;a++){u=c[a];if(1!==e.Clipper.PointInPolygon(u,n)){o=!1;break}}return r||o}(o,p)}export{n as ku_calCoord,t as ku_expand,o as ku_lineIntersects};
