import n from"clipper-lib";function e(n,e){if(void 0===e&&(e="upper"),n.length%2!=0)return[];for(var t=[],r=0;r<n.length;r+=2){var o=void 0;o="upper"===e?{X:n[r],Y:n[r+1]}:{x:n[r],y:n[r+1]},t.push(o)}return t}function t(t,r){void 0===r&&(r=10);var o=e(t),p=new n.ClipperOffset,i=new n.Paths;p.AddPaths([o],n.JoinType.jtMiter,n.EndType.etClosedPolygon),p.Execute(i,r);var u=i[0].reduce((function(n,e){return n.concat([e.X,e.Y])}),[]);return u.push(u[0],u[1]),u}function r(n){return e(n)}function o(e,t){var o=new n.Path;r(e).forEach((function(n){o.push(n)}));var i=new n.Path;r(t).forEach((function(n){i.push(n)}));var u=new n.Path,a=new n.Clipper;try{a.AddPath(o,n.PolyType.ptSubject,!0),a.AddPath(i,n.PolyType.ptClip,!0),a.Execute(n.ClipType.ctIntersection,u)}catch(n){console.log(n)}return!!u.length&&!p(o,i)}function p(e,t){for(var r=!0,o=!0,p=0,i=e;p<i.length;p++){var u=i[p];if(1!==n.Clipper.PointInPolygon(u,t)){r=!1;break}}for(var a=0,c=t;a<c.length;a++){u=c[a];if(1!==n.Clipper.PointInPolygon(u,e)){o=!1;break}}return r||o}export{e as ku_calCoord,t as ku_expand,o as ku_lineIntersects,p as ku_polygonIsContain};
