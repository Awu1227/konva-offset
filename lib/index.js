import n from"clipper-lib";function t(n,t){if(void 0===t&&(t="upper"),n.length%2!=0)return[];for(var r=[],e=0;e<n.length;e+=2){var o=void 0;o="upper"===t?{X:n[e],Y:n[e+1]}:{x:n[e],y:n[e+1]},r.push(o)}return r}function r(r,e){void 0===e&&(e=10);var o=t(r),i=new n.ClipperOffset,p=new n.Paths;i.AddPaths([o],n.JoinType.jtMiter,n.EndType.etClosedPolygon),i.Execute(p,e);var a=p[0].reduce((function(n,t){return n.concat([t.X,t.Y])}),[]);return a.push(a[0],a[1]),a}function e(n){return t(n)}function o(t,r){var o=new n.Path;e(t).forEach((function(n){o.push(n)}));var p=new n.Path;e(r).forEach((function(n){p.push(n)}));var a=new n.Path,u=new n.Clipper;try{u.AddPath(o,n.PolyType.ptSubject,!0),u.AddPath(p,n.PolyType.ptClip,!0),u.Execute(n.ClipType.ctIntersection,a)}catch(n){console.log(n)}return!!a.length&&!i(o,p)}function i(t,r){for(var e=!0,o=!0,i=0,p=t;i<p.length;i++){var a=p[i];if(1!==n.Clipper.PointInPolygon(a,r)){e=!1;break}}for(var u=0,l=r;u<l.length;u++){a=l[u];if(1!==n.Clipper.PointInPolygon(a,t)){o=!1;break}}return e||o}function p(t,r){for(var e=!0,o=0,i=r;o<i.length;o++){var p=i[o];if(1!==n.Clipper.PointInPolygon(p,t)){e=!1;break}}return e}export{i as ku_bothPolygonIsContain,t as ku_calCoord,r as ku_expand,o as ku_lineIntersects,p as ku_polygonIsContain};
